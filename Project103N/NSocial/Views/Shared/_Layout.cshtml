@using NSocial.Security
@using System
@using NSocial.Models
@using NSocial.DataAccess
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">

    <title>@ViewBag.Title - ASP.NET Uygulamam</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @{
        bool isAuth = !string.IsNullOrEmpty(SessionPersister.Email);
        User user = new User();
        if (isAuth)
        {
            user = UserDAL.Methods.FindX(SessionPersister.Email);
        }
    }

    @RenderSection("styles", false)
    <style>
        body {
            margin: 40px;
        }

        button {
            cursor: pointer;
            outline: 0;
            color: #AAA;
        }

        .btn:focus {
            outline: none;
        }

        .green {
            color: green;
        }

        .red {
            color: red;
        }

        btn:hover,
        btn:focus,
        btn.focus {
            color: unset !important;
            text-decoration: none;
        }
    </style>
</head>
<body>

    <div class="container body-content">


        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Link</a>
                    </li>

                    @if (isAuth)
                    {
                        @*<li><a class="btn btn-warning" href="/User/Details/@user.ID">@user.Email</a></li>*@
                        <li class="nav-item">@Html.ActionLink("İstek Listesi", "FriendList", "User", null, htmlAttributes: new { @class = "nav-link" })</li>
                        <li class="nav-item">@Html.ActionLink(@user.Name + " " + @user.Surname, "Details", "User", new { id = user.ID }, new { @class = "btn btn-success " })</li>
                        <li class="nav-item">@Html.ActionLink("Logout", "Logout", "Login", null, new { @class = "btn btn-danger" })</li>
                    }
                    @if (isAuth == false)
                    {
                        <li class="nav-item">@Html.ActionLink("LOGIN", "Login", "Login", null, new { @class = "btn btn-success " })</li>
                    }
                </ul>
                <form class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                </form>
            </div>
        </nav>






















        <div class="row">
            @RenderBody()
        </div>
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - ASP.NET Uygulamam</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @* <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    @*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>*@
    @RenderSection("scripts", required: false)

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
                $(document).ready(() => {

            var likebuttons = document.querySelector('.likebutton');
            var dislikebuttons = document.querySelector('.dislikebutton');

            $(".likebutton").on("click", function (event) {
                var postid = $(this).data("postid");
                console.log("POSTID:" + postid);

                var likesstr = "likes-" + String(postid);
                var dislikesstr = "dislikes-" + String(postid);

                var likes = document.getElementById(likesstr);
                var dislikes = document.getElementById(dislikesstr);

                var likeCount = 0;
                var dislikeCount = 0;

                var dislikebuttonstr = "btn-dislike-" + String(postid);
                var dislikebutton = document.getElementById(dislikebuttonstr);

                var likebuttonstr = "btn-like-" + String(postid);
                var likebutton = document.getElementById(likebuttonstr);

                if (dislikebutton.classList.contains('red')) {
                    dislikebutton.classList.remove('red');
                    var dislikeCount = Dislike(-1,postid);
                    dislikes.innerHTML = dislikeCount;
                    var dislikebuttonstrJ = "#" + dislikebuttonstr;
                    $(dislikebuttonstrJ).css("color", "#AAA");
                }

                // daha önceden green eklenmişse adam vazgeçmek için tıklıyordur.
                if (likebutton.classList.contains("green")) 
                {
                    //likebutton.classList.remove('green');
                    like = Like(-1,postid); // like sayısı 1 eksilir.
                    $(this).css("color", "#AAA");
                }else{
                    likeCount = Like(1,postid);
                    $(this).css("color", "green");
                }
                this.classList.toggle("green");
                //console.log(likeCount);
                likes.innerHTML = String(likeCount);
            });
            $(".dislikebutton").on("click", function (event) {
                var postid = $(this).data("postid");
                console.log("POSTID:" + postid);
                var likesstr = "likes-" + String(postid);
                var dislikesstr = "dislikes-" + String(postid);

                var likes = document.getElementById(likesstr);
                var dislikes = document.getElementById(dislikesstr);

                var likeCount = 0;
                var dislikeCount = 0;

                var dislikebuttonstr = "btn-dislike-" + String(postid);
                var dislikebutton = document.getElementById(dislikebuttonstr);

                var likebuttonstr = "btn-like-" + String(postid);
                var likebutton = document.getElementById(likebuttonstr);


                if (likebutton.classList.contains("green")) {
                    likebuttonstrJ = "#" + likebuttonstr;
                    likebutton.classList.remove("green");
                    var likeCount = Like(-1,postid);
                    likes.innerHTML = String(likeCount);
                    $(likebuttonstrJ).css("color", "#AAA");
                }
                if (dislikebutton.classList.contains("red")) {
                    dislikeCount = Dislike(-1,postid);
                    $(this).css("color", "#AAA");
                }
                else {
                    var dislikebuttonstrJ = "#" + dislikebuttonstr;
                    dislikeCount = Dislike(1,postid);
                    $(dislikebuttonstrJ).css("color", "red");
                }
                dislikes.innerHTML = dislikeCount;
                this.classList.toggle("red");
            });
              function Like(count, postid) {
                var post_url = "/Post/Like";
                var datam = {
                    value: count,
                    postidstr:postid
                };
                var likes = 0;
                $.ajax({
                    type: "POST",
                    async: false,
                    url: post_url,
                    data: datam,
                    dataType: "json",
                    encode: true,
                    success: function (likeCount) {
                        likes = likeCount;
                        //console.log(likeCount)
                        //console.log(likes)
                    }
                });
                //event.preventDefault();
                return likes;
            };
            function Dislike(count,postid) {
                var post_url = "/Post/Dislike";
                var datam = {
                    value: count,
                    postidstr:postid 
                };
                var dislikeCounttt = 0;
                $.ajax({
                    type: "POST",
                    async: false,
                    url: post_url,
                    data: datam,
                    dataType: "json",
                    encode: true,
                    success: function (dislikeCount) {
                        dislikeCounttt = dislikeCount;
                        //console.log(likeCount)
                        //console.log(likes)
                    }
                });
                //event.preventDefault();
                return dislikeCounttt;
            };
        });
    </script>

</body>
</html>
